<%= render 'modal_error' %>
<style>
.mini-loading-dialog {
  background: #ededed url(/images/spinner.gif) center top no-repeat;
  height: 55px;
  opacity: 0.5;
}
.sub-content-center .table-body {
  width: 773px;
  overflow: auto;
  padding-bottom: 15px;    
}
.sub-content-body {
  min-height:500px;
  height:auto !important;
  height:500px; 
}
</style>
<script>
  $(document).ready(function() {

    var lon = 5;
    var lat = 40;
    var zoom = 5;
    var map, layer;
    var points = new OpenLayers.Geometry.MultiPoint();
    var layers = []

    var options = {
      displayProjection: new OpenLayers.Projection("EPSG:4326"),
      units: "m",
      numZoomLevels: 22,
      maxExtent: new OpenLayers.Bounds(-20037508, -20037508, 20037508, 20037508.34)
    };  

    function loadMap() {
      if (!map) {
        $('#map-loading').hide();
        map = new OpenLayers.Map('map', options);
        
        map.addControl(new OpenLayers.Control.LayerSwitcher());
        
        map.addLayer(new OpenLayers.Layer.Google("Google Physical", {type: G_PHYSICAL_MAP}));
        map.addLayer(new OpenLayers.Layer.Google("Google Streets", {numZoomLevels: 20}));
        map.addLayer(new OpenLayers.Layer.Google("Google Hybrid", {type: G_HYBRID_MAP, numZoomLevels: 20}));
        map.addLayer(new OpenLayers.Layer.Google("Google Satellite", {type: G_SATELLITE_MAP, numZoomLevels: 22}));
      }
    }
    
    function centerMap(coordinates) {
      points.addPoint(OpenLayers.Geometry.fromWKT('POINT(' + coordinates + ')'));
      var centroid = points.getCentroid(true);
      WEHub.OpenLayers.setCenter(map, centroid.y, centroid.x, 4);
    }
    
    function enableMapControl(datasetId) {
      var datasetElement = $('.datasets.' + datasetId);
      datasetElement.removeClass('mini-loading-dialog');      
      datasetElement.find('input').attr('checked', true);
    }

    function drawJSON(data, colour, coordinates, datasetId) {
      loadMap();
      enableMapControl(datasetId);
      
      var geojson_format = new OpenLayers.Format.GeoJSON({
        'externalProjection': new OpenLayers.Projection('EPSG:4326'),
        'internalProjection': map.getProjectionObject()
      });
      var vector_layer = new OpenLayers.Layer.Vector(datasetId); 

      var style = OpenLayers.Feature.Vector.style["default"];
      style.strokeColor = style.fillColor = colour;
      style.strokeOpacity = style.fillOpacity = 0.3;
      vector_layer.style = style;
            
      map.addLayer(vector_layer);      
      vector_layer.addFeatures(geojson_format.read(data));
      
      centerMap(coordinates);
    }
    
    function drawWMS(colour, coordinates, datasetId) {
      <% #Filter out datasets with invalid coordinate systems %>
      if (Math.abs(coordinates.split(' ')[1]) > 180) {      
        return disableDataset(datasetId);
      }

      loadMap();
      enableMapControl(datasetId);
      
      var wmsLayer = new OpenLayers.Layer.WMS(datasetId, <%= "'#{Rails.application.config.geoserver_address}/geoserver/gn/wms?service=WMS&version=1.1.0&request=GetMap&layers=gn:'".html_safe %> + datasetId,
        { 
          transparent: true,
          layers: datasetId,
          format: 'image/png',
          srs: 'EPSG:4326'
        },
        { 
          reproject: false
        }
      );
      
      map.addLayer(wmsLayer);

      centerMap(coordinates);
    }
    
    function disableDataset(datasetId) {
      var datasetElement = $('.datasets.' + datasetId);
      datasetElement.removeClass('mini-loading-dialog').addClass('ui-state-disabled')
      datasetElement.find('input').attr('disabled', true);
    }

    <% 
      @datasets.each_with_index do |dataset, i|
        if dataset && dataset.coordinates
          if dataset.wms == 'true'
    %>
    <%= "drawWMS('#{css_colour(i)[:code]}', '#{dataset.coordinates.gsub(',', ' ')}', '#{dataset.id}');" %>
       <% else %>    
    $.ajax({
      url: "<%= url_for :controller => 'api', :action => 'feature', :id => dataset.id, :output => 'json' %>",
      global: false,
      success: function(data) { 
        <%= "drawJSON(data,'#{css_colour(i)[:code]}', '#{dataset.coordinates.gsub(',', ' ')}', '#{dataset.id}');" -%> 
      },
      error: function(data) { disableDataset('<%= dataset.id %>'); }
      
    });      
    <%
          end
        end
      end unless !@datasets
    %>    

    function matchesLayer(layer, ids) {
      if (layer && layer['name']) {
        for(j in ids) {
          if (layer['name'] === ids[j]) {
            return true;
          }
        }
      }
      return false;
    }
    
    function matchingLayers(layers, ids) {
      var matchedLayers = [];
      for(i in layers) {
        var layer = layers[i];
        if (matchesLayer(layer, ids)) {
          matchedLayers.push(layer);
        }
      }
      return matchedLayers;
    }
    
    var removedLayers = []    
    function toggleLayers(ids) {
      var toRemove = matchingLayers(map.layers, ids);
      var toAdd = matchingLayers(removedLayers, ids);

      
      for(i in toRemove) {
        map.removeLayer(toRemove[i]);
        removedLayers.push(toRemove[i])
      }


      for(i in toAdd) {
        map.addLayer(toAdd[i]);
        for(i in removedLayers) {
          var layer = removedLayers[i];
          if (matchesLayer(layer, ids)) {
            removedLayers[i] = null;
          }
        }
      }
    }

    function uuids() {
      var ids = []
      $('[name=dataset]:checked').each(function() { ids.push($(this).val()); });
      return ids;
    }
            
    $('form[name=datasets] [name=dataset]').click(function(event) {

      $('form[name=download] [name=ids]').val(uuids().join(','));
      toggleLayers([$(event.target).val()]);
    });
    
  });    
</script>

<%= render 'tool_tab_menu' %>

<div class="clear"></div>
<style>
  #filter-container ul {
    padding: 0px;
    margin: 0 -6px 0 20px;
  }
  #filter-container li {
    font-size: 30px;
    line-height: 18px;
  }
</style>
<div class="sub-content-body">
  <div class="sub-content-left">
<%
=begin %<  
    <div class="left-tab-body">
      <div id="bar-chart-div" class="left-tab tab-select">
        <a href="#">Layers</a>
      </div>
      <div id="line-chart-div" class="left-tab">
        <a href="#">Info</a>
      </div>
    </div>
    <div class="clear"></div>
<%
=end %>    
    <div id="filter-container">
      <div id="filter-content">
      
      <%= form_for :datasets, :html => { :name => 'datasets' } do |f| %>
      <%  @datasets.each_with_index do |dataset,i| %>
        <div class="mini-loading-dialog datasets <%= "#{dataset.id}" -%>">
          <div class="float-left">
            <%= check_box_tag "dataset", dataset.id, false, :id => "dataset_#{dataset.id}" %>
          </div>
          <div class="float-left width-5">&nbsp;</div>
          <div class="float-left"><label for='<%= "dataset_#{dataset.id}" %>'><ul><li style='color: <%= "#{css_colour(i)[:code]}" %>'></li></ul></label></div>
          <div class="float-left width-5">&nbsp;</div>
          <div class="float-left width-210">
            <label for='<%= "dataset_#{dataset.id}" %>'>
              <div class="tool-left-link">
              <%= link_to "#{dataset.name}", {:controller => 'catalogue', :action => 'details', :id => dataset.id}, :target => 'blank' %>
              </div>
              <div class="tool-left-text">
              <%= more_markup(dataset.description).html_safe -%>
              </div>
            </label>
          </div>
        </div>
        <div class="clear height-5">&nbsp;</div>
      <% end unless !@datasets %>
      <% end %>
      
      </div>

<%
=begin %>
      <div class="clear height-50">&nbsp;</div>
      <div>
        <span class="button">
          <button class="add">+ Dataset</button>
        </span>
        <span class="button">
          <button class="remove">Remove</button>
        </span>        
      </div>
<%
=end %>      
    </div>
  </div>

  <div class="sub-content-center">
    <div id="map-loading" style="width:780px;">
      <div style="padding: 20px;">Sit tight. We're loading your map requests.
      <p>This may take a while - depending on your internet connection speed and the size of the map data.</p></div>
    </div>
    <div id="map" style="width:780px;"></div>
  </div>
  <div class="clear"></div>
</div>
